#include <msp430g2553.h>
#include <legacymsp430.h>

#define IN_AD BIT1
#define IN_AD_CH INCH_1
#define LED1 BIT0
#define LED2 BIT6
#define LEDS (LED1|LED2)
#define LED3_tempo30s BIT4

int cont;

void tempo ()
{
  int n=1000000;
  while(n < 1000000);
 
  P1OUT &= ~LED2;
  //__delay_cycles(n);
  P1OUT |= LED2;
  n--;
}

int main(void)
{
  WDTCTL = WDTPW + WDTHOLD;
  
  BCSCTL1 = CALBC1_1MHZ;
  DCOCTL = CALDCO_1MHZ;
  
  P1OUT &= ~LEDS;
  P1DIR |= LEDS;
  //pinMode(LED2, OUTPUT);

  //  configurar o timer A 
    TACCR0 = 61440;
    //TA0CCTL1 |= OUTMOD_7;
    TA0CCR1 |= 0;
    TACTL = TASSEL_1 | ID_3 | MC_1;

  //conversÃ£o AD 
  ADC10CTL0 = SREF_0 + ADC10SHT_0 + ADC10ON;
  ADC10AE0 = IN_AD;
  // Com SHS_0, uma conversao sera requisitada
  // sempre que o bit ADC10SC for setado em ADC10CTL0
  ADC10CTL1 = IN_AD_CH + ADC10DIV_0 + ADC10SSEL_3 + CONSEQ_0 + SHS_0; 

  while(1)
  {
    // Manda comecar uma conversao
    ADC10CTL0 |= ENC + ADC10SC;
    // Espera a conversao ficar pronta
    while((ADC10CTL0 & ADC10IFG)==0);
             if (ADC10MEM < 512)
            {
              //P1OUT &= ~LED2;
              P1OUT |= LED1;
              __delay_cycles(1000000);
              P1OUT |= LED2;
                if(ADC10MEM < 512)
                  P1OUT |= LED2;
                else
                  P1OUT &= ~LED2;
                  P1OUT &= ~LED1;
                  
              //tempo();
            }
            else
            {
              P1OUT &= ~LED1;
              P1OUT &= ~LED2;
            }
  }  
  return 0;
}
