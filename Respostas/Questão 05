Escreva os trechos de c贸digo assembly do MSP430 para: 
(a) Somente setar o bit menos significativo de R5.
   BIS.W #1, R5
   
(b) Somente setar dois bits de R6: o menos significativo e o segundo menos significativo
      BIS.W #3, R6    

(c) Somente zerar o terceiro bit menos significativo de R7. 
BIC.W #4,R7

(d) Somente zerar o terceiro e o quarto bits menos significativo de R8.
BIC.W # 12, R8

(e)Somente inverter o bit mais significativo de R9.
XOR.W #56,R9

(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10.
XOR.W #240, R10
BIS.W R15,R10


2)"Traduza" o seguinte trecho de c贸digo em C para o assembly do MSP430:

if(i>j) f = g+h+10;
else f = g-h-10;


comp R7,R8
jl:LABEL_1

Mov.W # 10, R11
SUB.W R5,R11
SUB.W R5,R6
SUB.W R4,R5


LABEL_1:
Mov.W # 10, R11
Add.W R5,R11
Add.W R5,R6
Mov.W R4,R5


3."Traduza" o seguinte trecho de c贸digo em C para o assembly do MSP430:
while(save[i]!=k) i++; R15=K , R7=i

loop:
Mov.W R7,R12
rla R12
add.w R13,R12
cmp 0(R12),R15
jeq Exit
inc.W R7
Exit:


4."Traduza" o seguinte trecho de c贸digo em C para o assembly do MSP430:
for(i=0; i<100; i++) A[i] = i*2;

i=R7 A=R9

Loop:

Mov.W #0, R11
Mov.W # 99, R12
rla R7
Mov.W R7,R9
Cmp R11, R12
jeq exit
inc.w R11
jmp Loop






